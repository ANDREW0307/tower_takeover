16
{"last_modification_time":1563510610,"language":1,"import_file":"d:/pros projects/tower_takeover/include/macro.h","args_hash":7143976978263335256,"includes":[],"dependencies":[],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":3,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[0],"uses":[]}],"funcs":[{"id":0,"usr":1613186276990380940,"detailed_name":"void roller(int speed)","short_name_offset":5,"short_name_size":6,"kind":12,"storage":1,"hover":"","comments":"Rolls the flaps inward (intake the cubes).","declarations":[{"spell":"8:6-8:12|-1|1|1","param_spellings":["8:17-8:22"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":1,"usr":1494514076443158529,"detailed_name":"void roller(int speed, bool suck)","short_name_offset":5,"short_name_size":6,"kind":12,"storage":1,"hover":"","comments":"Rolls the flaps depending on the suck variable. If the boolean is set to false, the intake will run backwards, spitting out the cubes.","declarations":[{"spell":"11:6-11:12|-1|1|1","param_spellings":["11:17-11:22","11:29-11:33"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":2,"usr":4825595426324011396,"detailed_name":"void lift(double target, int speed)","short_name_offset":5,"short_name_size":4,"kind":12,"storage":1,"hover":"","comments":"P loop lift. If a negative target is inserted, the lift will decline.","declarations":[{"spell":"19:6-19:10|-1|1|1","param_spellings":["19:18-19:24","19:30-19:35"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":3,"usr":16519798872813996946,"detailed_name":"double pTerm(double target, double sensor, double kP)","short_name_offset":7,"short_name_size":5,"kind":12,"storage":1,"hover":"","comments":"Calculates P term with the following equation. (Target - Sensor) * kP","declarations":[{"spell":"27:8-27:13|-1|1|1","param_spellings":["27:21-27:27","27:36-27:42","27:51-27:53"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":4,"usr":15578913409717711667,"detailed_name":"double dTerm(double now, double last)","short_name_offset":7,"short_name_size":5,"kind":12,"storage":1,"hover":"","comments":"Calculates D term with the following equation. (Now - Last)","declarations":[{"spell":"30:8-30:13|-1|1|1","param_spellings":["30:21-30:24","30:33-30:37"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":5,"usr":14740877011042002903,"detailed_name":"void wait(int ms)","short_name_offset":5,"short_name_size":4,"kind":12,"storage":1,"hover":"","comments":"Etc","declarations":[{"spell":"33:6-33:10|-1|1|1","param_spellings":["33:15-33:17"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":6,"usr":10287126595592114041,"detailed_name":"void print(const char *text)","short_name_offset":5,"short_name_size":5,"kind":12,"storage":1,"hover":"","comments":"","declarations":[{"spell":"34:6-34:11|-1|1|1","param_spellings":["34:25-34:29"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]}],"vars":[{"id":0,"usr":14335186871399897329,"detailed_name":"bool isStacking","short_name_offset":5,"short_name_size":10,"hover":"","comments":"","declarations":["1:13-1:23|-1|1|1"],"type":0,"uses":[],"kind":13,"storage":2}]}