16
{"last_modification_time":1563861433,"language":1,"import_file":"d:/pros projects/tower_takeover/include/macro.h","args_hash":7143976978263335256,"includes":[],"dependencies":[],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":3,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[0],"uses":[]}],"funcs":[{"id":0,"usr":3721024490580843521,"detailed_name":"void rack(int speed)","short_name_offset":5,"short_name_size":4,"kind":12,"storage":1,"hover":"","comments":"Moves the rack in a given speed. Use negative values for going down. Uses RPM for speed.","declarations":[{"spell":"8:6-8:10|-1|1|1","param_spellings":["8:15-8:20"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":1,"usr":9786032176946096248,"detailed_name":"void arm(int speed)","short_name_offset":5,"short_name_size":3,"kind":12,"storage":1,"hover":"","comments":"Moves the arm speed in a given speed. Use negative values for going down. Uses RPM for speed.","declarations":[{"spell":"11:6-11:9|-1|1|1","param_spellings":["11:14-11:19"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":2,"usr":1613186276990380940,"detailed_name":"void roller(int speed)","short_name_offset":5,"short_name_size":6,"kind":12,"storage":1,"hover":"","comments":"Rotates the rollers in a given speed. Use negative values for going down. Uses RPM for speed.","declarations":[{"spell":"14:6-14:12|-1|1|1","param_spellings":["14:17-14:22"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":3,"usr":15180632092927517906,"detailed_name":"void rackAsync(double target, int speed, double rate)","short_name_offset":5,"short_name_size":9,"kind":12,"storage":1,"hover":"","comments":"Moves the rack to the target, in a given speed.","declarations":[{"spell":"22:6-22:15|-1|1|1","param_spellings":["22:23-22:29","22:35-22:40","22:49-22:53"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":4,"usr":16201698379273682249,"detailed_name":"void armAsync(double target, int speed, double rate)","short_name_offset":5,"short_name_size":8,"kind":12,"storage":1,"hover":"","comments":"Moves the arm to the target, in a given speed.","declarations":[{"spell":"25:6-25:14|-1|1|1","param_spellings":["25:22-25:28","25:34-25:39","25:48-25:52"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":5,"usr":4037588367920163223,"detailed_name":"void tower(int id)","short_name_offset":5,"short_name_size":5,"kind":12,"storage":1,"hover":"","comments":"Macro for putting a cube in the tower.","declarations":[{"spell":"28:6-28:11|-1|1|1","param_spellings":["28:16-28:18"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":6,"usr":16519798872813996946,"detailed_name":"double pTerm(double target, double sensor, double kP)","short_name_offset":7,"short_name_size":5,"kind":12,"storage":1,"hover":"","comments":"Calculates P term with the following equation. (Target - Sensor) * kP","declarations":[{"spell":"36:8-36:13|-1|1|1","param_spellings":["36:21-36:27","36:36-36:42","36:51-36:53"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":7,"usr":15578913409717711667,"detailed_name":"double dTerm(double now, double last)","short_name_offset":7,"short_name_size":5,"kind":12,"storage":1,"hover":"","comments":"Calculates D term with the following equation. (Now - Last)","declarations":[{"spell":"39:8-39:13|-1|1|1","param_spellings":["39:21-39:24","39:33-39:37"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":8,"usr":1339581032766762561,"detailed_name":"bool isSettled(double error, double tolerance)","short_name_offset":5,"short_name_size":9,"kind":12,"storage":1,"hover":"","comments":"Returns true if the error value is within the set tolerance.","declarations":[{"spell":"42:6-42:15|-1|1|1","param_spellings":["42:23-42:28","42:37-42:46"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":9,"usr":14740877011042002903,"detailed_name":"void wait(int ms)","short_name_offset":5,"short_name_size":4,"kind":12,"storage":1,"hover":"","comments":"Basic functions that everybody knows.","declarations":[{"spell":"51:6-51:10|-1|1|1","param_spellings":["51:15-51:17"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":10,"usr":10287126595592114041,"detailed_name":"void print(const char *text)","short_name_offset":5,"short_name_size":5,"kind":12,"storage":1,"hover":"","comments":"","declarations":[{"spell":"52:6-52:11|-1|1|1","param_spellings":["52:25-52:29"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]}],"vars":[{"id":0,"usr":14335186871399897329,"detailed_name":"bool isStacking","short_name_offset":5,"short_name_size":10,"hover":"","comments":"","declarations":["1:13-1:23|-1|1|1"],"type":0,"uses":[],"kind":13,"storage":2}]}